/*
Сервис баннеров

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserBannerGet400Response struct for UserBannerGet400Response
type UserBannerGet400Response struct {
	Error *string `json:"error,omitempty"`
}

// NewUserBannerGet400Response instantiates a new UserBannerGet400Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserBannerGet400Response() *UserBannerGet400Response {
	this := UserBannerGet400Response{}
	return &this
}

// NewUserBannerGet400ResponseWithDefaults instantiates a new UserBannerGet400Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserBannerGet400ResponseWithDefaults() *UserBannerGet400Response {
	this := UserBannerGet400Response{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *UserBannerGet400Response) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserBannerGet400Response) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *UserBannerGet400Response) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *UserBannerGet400Response) SetError(v string) {
	o.Error = &v
}

func (o UserBannerGet400Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableUserBannerGet400Response struct {
	value *UserBannerGet400Response
	isSet bool
}

func (v NullableUserBannerGet400Response) Get() *UserBannerGet400Response {
	return v.value
}

func (v *NullableUserBannerGet400Response) Set(val *UserBannerGet400Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUserBannerGet400Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUserBannerGet400Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserBannerGet400Response(val *UserBannerGet400Response) *NullableUserBannerGet400Response {
	return &NullableUserBannerGet400Response{value: val, isSet: true}
}

func (v NullableUserBannerGet400Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserBannerGet400Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
