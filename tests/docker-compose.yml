version: '3.8'

services:
  redis:
    image: redis:alpine
    entrypoint: /bin/sh -c 'redis-server --requirepass $(cat /run/secrets/redis_password)'
    secrets:
      - redis_password
    volumes:
      - redis_data:/var/lib/redis/test_data

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER: banner
      POSTGRES_DB: banners
    secrets:
      - postgres_password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U banner -d banners" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/test_data

  migrations:
    image: migrate/migrate:latest
    command: ["-path=/migrations/", "-database=postgres://banner:postgres1234@postgres:5432/banners?sslmode=disable", "up"]
    volumes:
      - ../migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy

  bannerflow:
    build: ..
    depends_on:
      - migrations
      - redis
    environment:
      CONFIG_PATH: /run/secrets/banner_config.yaml
    secrets:
      - banner_config.yaml

  tester:
    build:
      context: ../
      dockerfile: ./tests/Dockerfile
    depends_on:
      - bannerflow
    environment:
      SERVER_ADDR: bannerflow:8888
    command: [ "go", "test", "-v", "./tests" ]


volumes:
  postgres_data:
  redis_data:

secrets:
  postgres_password:
    file: ../config/postgres_password
  redis_password:
    file: ../config/redis_password
  banner_config.yaml:
    file: ../config/banner_dev.yaml